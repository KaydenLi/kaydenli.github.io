<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>web 无障碍</title>
    <url>/2020/02/03/web%E6%97%A0%E9%9A%9C%E7%A2%8D/</url>
    <content><![CDATA[<h1 id="web-无障碍"><a href="#web-无障碍" class="headerlink" title="web 无障碍"></a>web 无障碍</h1><p>   能够被残障人士使用的网站才能称得上一个易用的（易访问的）网站。残障人士指的是那些带有残疾或者身体不健康的用户。</p>
<h2 id="1-使用alt属性，例如："><a href="#1-使用alt属性，例如：" class="headerlink" title="1. 使用alt属性，例如："></a>1. 使用alt属性，例如：</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"person.jpg"</span>  <span class="attr">alt</span>=<span class="string">"this is a person"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>有时候浏览器会无法显示图像。具体的原因有：</p>
<ol>
<li>用户关闭了图像显示。</li>
<li>浏览器是不支持图形显示的迷你浏览器。</li>
<li>浏览器是语音浏览器（供盲人和弱视人群使用）。<br>如果使用了alt 属性，那么浏览器至少可以显示或读出有关图像的描述。</li>
</ol>
<h2 id="2-使用可调节的字体大小"><a href="#2-使用可调节的字体大小" class="headerlink" title="2. 使用可调节的字体大小"></a>2. 使用可调节的字体大小</h2><p>   使用相对的字体尺寸，这样用户就能够使用浏览器菜单来改变默认的字体尺寸。</p>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>CSS清除浮动</title>
    <url>/2020/02/03/CSS%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/</url>
    <content><![CDATA[<h1 id="CSS清除浮动"><a href="#CSS清除浮动" class="headerlink" title="CSS清除浮动"></a>CSS清除浮动</h1><h2 id="1-什么是CSS清除浮动？"><a href="#1-什么是CSS清除浮动？" class="headerlink" title="1. 什么是CSS清除浮动？"></a>1. 什么是CSS清除浮动？</h2><p>   在非IE浏览器（如Firefox）下，当容器的高度为auto，且容器的内容中有浮动（float为left或right）的元素，在这种情况下，容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.news &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  border: solid 1px black;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news img &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news p &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"news-pic.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>some text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-清除浮动方法"><a href="#2-清除浮动方法" class="headerlink" title="2. 清除浮动方法"></a>2. 清除浮动方法</h2><h3 id="1-使用带clear属性的空元素"><a href="#1-使用带clear属性的空元素" class="headerlink" title="1. 使用带clear属性的空元素"></a>1. 使用带clear属性的空元素</h3><p>   在浮动元素后使用一个空元素如<div class="clear"></div>，并在CSS中赋予.clear{clear:both;}属性即可清理浮动。亦可使用<br class="clear" />或<hr class="clear" />来进行清理。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.news &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  border: solid 1px black;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news img &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news p &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.clear &#123;</span><br><span class="line">  clear: both;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"news-pic.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>some text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>优点：简单，代码少，浏览器兼容性好。<br>缺点：需要添加大量无语义的html元素，代码不够优雅，后期不容易维护。</p>
<h3 id="2-使用CSS的overflow属性"><a href="#2-使用CSS的overflow属性" class="headerlink" title="2. 使用CSS的overflow属性"></a>2. 使用CSS的overflow属性</h3><p>   给浮动元素的容器添加overflow:hidden;或overflow:auto;可以清除浮动，另外在 IE6 中还需要触发 hasLayout ，例如为父元素设置容器宽高或设置 zoom:1。<br>   在添加overflow属性后，浮动元素又回到了容器层，把容器高度撑起，达到了清理浮动的效果。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.news &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  border: solid 1px black;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  *zoom: 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news img &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news p &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"news-pic.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>some text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3-给浮动的元素的容器添加浮动"><a href="#3-给浮动的元素的容器添加浮动" class="headerlink" title="3. 给浮动的元素的容器添加浮动"></a>3. 给浮动的元素的容器添加浮动</h3><p>   给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，不推荐使用。</p>
<h3 id="4-使用邻接元素处理"><a href="#4-使用邻接元素处理" class="headerlink" title="4. 使用邻接元素处理"></a>4. 使用邻接元素处理</h3><p>   什么都不做，给浮动元素后面的元素添加clear属性。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.news &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  border: solid 1px black;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news img &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news p &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.content&#123;</span><br><span class="line">  clear:both;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"news-pic.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>some text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="5-使用CSS的-after伪元素"><a href="#5-使用CSS的-after伪元素" class="headerlink" title="5. 使用CSS的:after伪元素"></a>5. 使用CSS的:after伪元素</h3><p>   结合 :after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。<br>   给浮动元素的容器添加一个clearfix的class，然后给这个class添加一个:after伪元素实现元素末尾添加一个看不见的块元素（Block element）清理浮动。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.news &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  border: solid 1px black;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news img &#123;</span><br><span class="line">  float: left;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.news p &#123;</span><br><span class="line">  float: right;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.clearfix:after&#123;</span><br><span class="line">  content: "020"; </span><br><span class="line">  display: block; </span><br><span class="line">  height: 0; </span><br><span class="line">  clear: both; </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">.clearfix &#123;</span><br><span class="line">  /* 触发 hasLayout */ </span><br><span class="line">  zoom: 1; </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"news-pic.jpg"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>some text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>   通过CSS伪元素在容器的内部元素最后添加了一个看不见的空格”020”或点”.”，并且赋予clear属性来清除浮动。需要注意的是为了IE6和IE7浏览器，要给clearfix这个class添加一条zoom:1;触发haslayout。</p>
<h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>   通过上面的例子，我们不难发现清除浮动的方法可以分成两类：<br>   一是利用 clear 属性，包括在浮动元素末尾添加一个带有 clear: both 属性的空 div 来闭合元素，其实利用 :after 伪元素的方法也是在元素末尾添加一个内容为一个点并带有 clear: both 属性的元素实现的。<br>   二是触发浮动元素父元素的 BFC (Block Formatting Contexts, 块级格式化上下文)，使到该父元素可以包含浮动元素，关于这一点。<br>    在网页主要布局时使用:after伪元素方法并作为主要清理浮动方式；在小模块如ul里使用overflow:hidden;（留意可能产生的隐藏溢出元素问题）；如果本身就是浮动元素则可自动清除内部浮动，无需格外处理；正文中使用邻接元素清理之前的浮动。<br>   最后可以使用相对完美的:after伪元素方法清理浮动，文档结构更加清晰。</p>
<h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><p>   <a href="https://www.cnblogs.com/ForEvErNoME/p/3383539.html" target="_blank" rel="noopener">清除浮动</a></p>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>position定位</title>
    <url>/2020/02/03/position%E5%B1%9E%E6%80%A7%E6%AF%94%E8%BE%83/</url>
    <content><![CDATA[<h1 id="position属性-比较"><a href="#position属性-比较" class="headerlink" title="position属性 比较"></a>position属性 比较</h1><h2 id="1-固定定位fixed"><a href="#1-固定定位fixed" class="headerlink" title="1. 固定定位fixed"></a>1. 固定定位fixed</h2><p>   元素的位置相对于浏览器窗口是固定位置，即使窗口是滚动的它也不会移动。Fixed定位使元素的位置与文档流无关，因此不占据空间。 Fixed定位的元素和其他元素重叠。</p>
<h2 id="2-相对定位relative"><a href="#2-相对定位relative" class="headerlink" title="2. 相对定位relative"></a>2. 相对定位relative</h2><p>   如果对一个元素进行相对定位，它将出现在它所在的位置上。然后，可以通过设置垂直或水平位置，让这个元素“相对于”它的起点进行移动。 在使用相对定位时，无论是否进行移动，元素仍然占据原来的空间。因此，移动元素会导致它覆盖其它框。</p>
<h2 id="3-绝对定位absolute"><a href="#3-绝对定位absolute" class="headerlink" title="3. 绝对定位absolute"></a>3. 绝对定位absolute</h2><p>   绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于<code>&lt;html&gt;</code>。 absolute 定位使元素的位置与文档流无关，因此不占据空间。 absolute 定位的元素和其他元素重叠。</p>
<h2 id="4-粘性定位sticky"><a href="#4-粘性定位sticky" class="headerlink" title="4. 粘性定位sticky"></a>4. 粘性定位sticky</h2><p>   元素先按照普通文档流定位，然后相对于该元素在流中的flow root（BFC）和 containing block（最近的块级祖先元素）定位。而后，元素定位表现为在跨越特定阈值前为相对定位，之后为固定定位。</p>
<h2 id="5-默认定位Static"><a href="#5-默认定位Static" class="headerlink" title="5. 默认定位Static"></a>5. 默认定位Static</h2><p>   默认值。没有定位，元素出现在正常的流中（忽略top, bottom, left, right 或者 z-index 声明）。</p>
<h2 id="6-inherit"><a href="#6-inherit" class="headerlink" title="6. inherit"></a>6. inherit</h2><p>   规定应该从父元素继承position 属性的值。</p>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>垂直居中的方法</title>
    <url>/2020/02/03/css%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="垂直居中的方法"><a href="#垂直居中的方法" class="headerlink" title="垂直居中的方法"></a>垂直居中的方法</h1><h2 id="1-margin-auto法"><a href="#1-margin-auto法" class="headerlink" title="1. margin:auto法"></a>1. margin:auto法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">css:</span><br><span class="line">div&#123;</span><br><span class="line">   width: 400px;</span><br><span class="line">   height: 400px;</span><br><span class="line">   position: relative;</span><br><span class="line">   border: 1px solid #465468;</span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line">   position: absolute;</span><br><span class="line">   margin: auto;</span><br><span class="line">   top: 0;</span><br><span class="line">   left: 0;</span><br><span class="line">   right: 0;</span><br><span class="line">   bottom: 0;</span><br><span class="line">&#125;</span><br><span class="line">html:</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"mm.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>定位为上下左右为0，margin：0可以实现脱离文档流的居中。</p>
<h2 id="2-margin负值法"><a href="#2-margin负值法" class="headerlink" title="2. margin负值法"></a>2. margin负值法</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#379</span>;</span><br><span class="line">   <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">480px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">380px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#746</span>;</span><br><span class="line">   <span class="attribute">position</span>: absolute;</span><br><span class="line">   <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">margin-top</span>: -<span class="number">190px</span>; <span class="comment">/*height的一半*/</span></span><br><span class="line">   <span class="attribute">margin-left</span>: -<span class="number">240px</span>; <span class="comment">/*width的一半*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>补充：其实这里也可以将marin-top和margin-left负值替换成，<br>transform：translateX(-50%)和transform：translateY(-50%)</p>
<h2 id="3-table-cell（未脱离文档流的）"><a href="#3-table-cell（未脱离文档流的）" class="headerlink" title="3. table-cell（未脱离文档流的）"></a>3. table-cell（未脱离文档流的）</h2><p>   设置父元素的display:table-cell,并且vertical-align:middle，这样子元素可以实现垂直居中。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">css</span>:</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#555</span>;</span><br><span class="line">   <span class="attribute">display</span>: table-cell;</span><br><span class="line">   <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">   <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-利用flex"><a href="#4-利用flex" class="headerlink" title="4. 利用flex"></a>4. 利用flex</h2><p>将父元素设置为display:flex，并且设置align-items:center;justify-content:center;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#546461</span>;</span><br><span class="line">   <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">   <span class="attribute">display</span>: flex;</span><br><span class="line">   <span class="attribute">-webkit-align-items</span>: center;</span><br><span class="line">   <span class="attribute">align-items</span>: center;</span><br><span class="line">   <span class="attribute">-webkit-justify-content</span>: center;</span><br><span class="line">   <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span>&#123;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#458761</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CSS</category>
      </categories>
  </entry>
  <entry>
    <title>BOM</title>
    <url>/2020/02/02/BOM/</url>
    <content><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><h2 id="1-BOM的基本概念"><a href="#1-BOM的基本概念" class="headerlink" title="1. BOM的基本概念"></a>1. BOM的基本概念</h2><p>   BOM(Browser Object Mode) 就是指浏览器对象模型，是用于描述这种对象与对象之间层次关系的模型，浏览器对象模型提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。BOM由多个对象组成，其中代表浏览器窗口的 Window 对象是BOM的顶层对象，其他对象都是该对象的子对象。javacsript 是通过访问 BOM对象来访问、控制、修改客户端(浏览器)的，即 BOM 提供了与浏览器交互的方法和接口；与此类似的是 DOM，它提供了处理网页内容的方法和接口。</p>
<h2 id="2-Window对象"><a href="#2-Window对象" class="headerlink" title="2. Window对象"></a>2. Window对象</h2><p>Window 对象通常可实现如下功能：弹出新的浏览器窗口；移动、关闭浏览器窗口及调整窗口大小；在浏览器窗口中实现页面的前进、后退功能。<br>|属性方法|说明|<br>|:–:|:–:|<br>|history|有关客户访问过的URL的信息。|<br>|location|有关当前URL的信息。|<br>|screen|只读属性，包含有关客户端显示屏的信息。|<br>|prompt()|显示可提示用户输入的对话框。|<br>|alert()|显示一个带有提示信息和一个“确定”按钮的警示对话框。|<br>|confirm()|显示一个带有提示信息、“确定”和“取消”按钮的对话框。|<br>|close()|关闭浏览器窗口。|<br>|open()|打开一个新的浏览器窗口，加载给定URL所指定的文档。|<br>|setTimeout()|在指定的毫秒数后调用函数或计算表达式。|<br>|setInterval()|按照指定的周期（以毫秒计）来调用函数或表达式。|</p>
<h2 id="3-window对象的子对象"><a href="#3-window对象的子对象" class="headerlink" title="3. window对象的子对象"></a>3. window对象的子对象</h2><h3 id="1-location对象"><a href="#1-location对象" class="headerlink" title="1. location对象"></a>1. location对象</h3><p><code>location</code> 是一个静态对象，该对象是对当前窗口 URL 地址的解析。该对象提供了可以访问 URL 中不同部分的信息属性，通过 <code>location</code> 对象也可以实现页面或锚点跳转等功能。<br>|属性方法|说明|<br>|:–:|:–:|<br>|href|返回或设置当前文档的URL|<br>|search|返回URL中的查询字符串部分。|<br>|hash|返回URL#后面的内容，如果没有#，返回空。|<br>|host|返回URL中的域名部分|<br>|hostname|返回URL中的主域名部分，例如dreamdu.com。|<br>|pathname|返回URL的域名后的部分。|<br>|port|返回URL中的端口部分。|<br>|protocol|返回URL中的协议部分。|<br>|assign|设置当前文档的URL。|<br>|replace()|设置当前文档的URL，并且在history对象的地址列表中移除这个URL location.replace(url);|<br>|reload()| 重载当前页面。|</p>
<h3 id="2-history对象"><a href="#2-history对象" class="headerlink" title="2. history对象"></a>2. history对象</h3><p>   <code>history</code>对象来保存浏览器历史记录信息，也就是用户访问的页面。浏览器的前进与后退功能本质上就是 <code>history</code> 的操作。<code>history</code> 对象记录了用户浏览过的页面，通过该对象提供的 API 可以实现与浏览器前进/后退类似的导航功能。<br>|属性方法|说明|<br>|:–:|:–:|<br>|go()|前进或后退指定的页面数 history.go(num)。|<br>|back()|后退一页。|<br>|forward()|前进一页。|</p>
<h3 id="3-Navigator对象"><a href="#3-Navigator对象" class="headerlink" title="3. Navigator对象"></a>3. Navigator对象</h3><p><code>navigator</code> 是指浏览器对象，该对象提供了当前正在使用的浏览器的信息。<code>navigator</code> 对象中的属性是只读的，在 W3C 在 HTML5 标准中，对该对象进行了规范。由于浏览器的同，该对象的具体值可能有所区别。<br>|属性方法|说明|<br>|:–:|:–:|<br>|userAgent|返回用户代理头的字符串表示。|<br>|cookieEnabled|返回浏览器是否支持(启用)cookie。|</p>
<h3 id="4-screen对象"><a href="#4-screen对象" class="headerlink" title="4. screen对象"></a>4. screen对象</h3><p><code>screen</code> 对象中包含了用户显示器屏幕相关信息。通过该对象，可以访问用户显示器屏幕宽、高、色深等信息。</p>
<h3 id="5-DOM（document）相关对象"><a href="#5-DOM（document）相关对象" class="headerlink" title="5. DOM（document）相关对象"></a>5. DOM（document）相关对象</h3><p>DOM 可以认为是 BOM 的一个子集，DOM 中文档操作相关对象，如：<code>Node</code>、<code>Document</code>、<code>Element</code>等 DOM 节点类型对象，都是做为 <code>window</code> 对象的子属性出现的。<code>document</code> 是 <code>window</code> 对象的一个属性，它是一个 <code>document</code> 对象实例，表示当前窗口中文档对象。通过该对象，可以对文档和文档中元素、节点等进行操作。</p>
<h3 id="6-frames-对象"><a href="#6-frames-对象" class="headerlink" title="6. frames 对象"></a>6. frames 对象</h3><p><code>frames</code> 对象是一个集合，表示当前页面中使用的子框架。如果页面中使用了框架，将产生一个框架集合 <code>frames</code>，在集合中可以用数字下标（从 0 开始）或名字索引框架。集全中的每一个对象，包含了框架的页面布局信息，以及每一个框架所对应的 <code>window</code> 对象。</p>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>websocket介绍</title>
    <url>/2020/02/01/WebSocket%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="websocket-知识介绍"><a href="#websocket-知识介绍" class="headerlink" title="websocket 知识介绍"></a>websocket 知识介绍</h1><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h2><p>   WebSocket是 HTML5 中的协议，支持持久连续连接，而 http 协议不支持持久性连接。HTTP1.0 和 HTTP1.1 都不支持持久性的链接，HTTP1.1 中的 keep-alive，将多个 http 请求合并为 1 个</p>
<h2 id="2-WebSocket的优点"><a href="#2-WebSocket的优点" class="headerlink" title="2. WebSocket的优点"></a>2. WebSocket的优点</h2><p>   HTTP的生命周期通过 Request 来界定，也就是 Request 一个 Response，那么在 HTTP1.0 协议中，这次 http 请求就结束了。在 HTTP1.1中进行了改进，是的有一个 connection：Keep-alive，也就是说，在一个 http 连接中，可以发送多个 Request，接收多个 Response。但是必须记住，在 http 中一个 Request 只能对应有一个 Response，而且这个 Response 是被动的，不能主动发起。<br>   WebSocket 是基于 HTTP 协议的，或者说借用了HTTP 协议来完成一部分握手，在握手阶段与http是相同的。我们来看一个 websocket 握手协议的实现，基本是 2 个属性：upgrade 和 connection。</p>
<p>基本请求如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">GET /chat HTTP/1.1</span><br><span class="line">Host: server.example.com</span><br><span class="line">Upgrade: websocket</span><br><span class="line">Connection: Upgrade</span><br><span class="line">Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==</span><br><span class="line">Sec-WebSocket-Protocol: chat, superchat</span><br><span class="line">Sec-WebSocket-Version: 13</span><br><span class="line">Origin: http://example.com</span><br></pre></td></tr></table></figure>
<p>多了下面2个属性：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Upgrade:webSocket</span><br><span class="line">Connection:Upgrade</span><br></pre></td></tr></table></figure>
<p>告诉服务器发送的是websocket</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==</span><br><span class="line">Sec-WebSocket-Protocol: chat, superchat</span><br><span class="line">Sec-WebSocket-Version: 13</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>http与https介绍</title>
    <url>/2020/02/01/http%E4%B8%8Ehttps/</url>
    <content><![CDATA[<h1 id="http与https介绍"><a href="#http与https介绍" class="headerlink" title="http与https介绍"></a>http与https介绍</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>   http 即超文本传输协议，是互联网上应用最为广泛的一种网络协议，是一个客户端和服务器端请求和应答的标准（TCP），用于从 WWW 服务器传输超文本到本地浏览器的传输协议，它可以使浏览器更加高效，使网络传输减少。https 是以安全为目标的HTTP通道，https 的 SSL 加密是在传输层实现的。简单讲是HTTP的安全版，即 HTTP下加入 SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要SSL。https 协议的主要作用是建立一个信息安全通道，来确保数组的传输，确保网站的真实性。<br>   SSL(Secure Sockets Layer ，安全套接层)，及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS 与 SSL 在传输层与应用层之间对网络连接进行加密。<br>   下表介绍互联网加密协议历史：<br>|时间|版本|<br>|:–:|:–:|<br>|1994年|NetScape 公司设计了 SSL 协议的1.0版，但是未发布。|<br>|1995年|NetScape 公司发布 SSL 2.0版，很快发现有严重漏洞。|<br>|1996年|SSL 3.0 版问世，得到大规模应用。|<br>|1999年|互联网标准化组织 ISOC 接替 NetScape 公司，发布了 SSL 的升级版 TLS 1.0 版。|<br>|2006年|TLS 升级为 TLS 1.1 版。|<br>|2008年|TLS 升级为 TLS 1.2 版。最新的变动是2011年 TLS 1.2 的修订版。|<br>   目前，应用最广泛的是TLS 1.0和SSL 3.0。主流浏览器都已经实现了 TLS 1.2 的支持。TLS 1.0 通常被标示为 SSL 3.1，TLS 1.1 为 SSL 3.2，TLS 1.2 为 SSL 3.3。所谓的 HTTPS 其实是 “HTTP over SSL” 或 “HTTP over TLS”，它是 HTTP 与 SSL/TSL 的结合使用而已。SSL/TLS协议的基本过程：</p>
<ol>
<li><p>客户端发出请求。<br>客户端（通常是浏览器）先向服务器发出加密通信的请求，这被叫做 ClientHello 请求。在这一步，客户端主要向服务器提供以下信息：支持的协议版本，比如 TLS 1.0 版。一个客户端生成的随机数，稍后用于生成”对话密钥”。支持的加密方法，比如RSA公钥加密。支持的压缩方法。</p>
</li>
<li><p>服务器回应。<br>服务器收到客户端请求后，向客户端发出回应，这叫做 SeverHello。服务器的回应包含以下内容：确认使用的加密通信协议版本，比如 TLS 1.0 版本。如果浏览器与服务器支持的版本不一致，服务器关闭加密通信。一个服务器生成的随机数，稍后用于生成”对话密钥”。确认使用的加密方法，比如 RSA 公钥加密。服务器证书。</p>
</li>
<li><p>客户端回应。<br>客户端收到服务器回应以后，首先验证服务器证书。如果证书不是可信机构颁布、或者证书中的域名与实际域名不一致、或者证书已经过期，就会向访问者显示一个警告，由其选择是否还要继续通信。如果证书没有问题，客户端就会从证书中取出服务器的公钥。然后，向服务器发送下面三项信息：一个随机数。该随机数用服务器公钥加密，防止被窃听。编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送。客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时也是前面发送的所有内容的hash值，用来供服务器校验。</p>
</li>
<li><p>服务器回应<br>服务器收到客户端的第三个随机数pre-master key之后，计算生成本次会话所用的”会话密钥”。然后，向客户端最后发送下面信息：编码改变通知，表示随后的信息都将用双方商定的加密方法和密钥发送。服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时也是前面发送的所有内容的hash值，用来供客户端校验。</p>
</li>
<li><p>双方采用”对话密钥”进行加密通信。<br>(来自 <a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener">阮一峰–SSL/TLS协议运行机制</a> 。)<br>下表介绍 http 协议的版本及发布时间。</p>
<table>
<thead>
<tr>
<th align="center">协议版本</th>
<th align="center">时间</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HTTP/0.9</td>
<td align="center">1991</td>
<td align="center">它只有一个命令 GET，没有 HEADER 等描述数据的信息，服务器发送完内容之后，就关闭 TCP 连接。</td>
</tr>
<tr>
<td align="center">HTTP/1.0</td>
<td align="center">1996</td>
<td align="center">增加了很多命令，比如：POST、PUT、HEADER 这些命令。 增加了status code 和 header 相关的内容 。加了多字符集支持、多部分发送、权限、缓存等相关的内容。</td>
</tr>
<tr>
<td align="center">HTTP/1.1</td>
<td align="center">1999</td>
<td align="center">支持了持久连接。增加了pipeline。 增加了 HTTP 的头 host 和其他一些命令。</td>
</tr>
<tr>
<td align="center">HTTP/2</td>
<td align="center">2015</td>
<td align="center">头信息的压缩。推送的功能。</td>
</tr>
</tbody></table>
</li>
</ol>
<h2 id="2-http-和-https-的区别"><a href="#2-http-和-https-的区别" class="headerlink" title="2. http 和 https 的区别"></a>2. http 和 https 的区别</h2><p>   http 传输的数据都是未加密的，也就是明文的，NetScape 公司设置了SSL协议来对 http 协议传输的数据进行加密处理，简单来说 https 协议是由 http 和 ssl 协议构建的可进行加密传输和身份认证的网络协议，比 http 协议的安全性更高。<br>主要的区别如下表：<br>|区别|<br>|:—|<br>|Https 协议需要 ca 证书，费用较高。|<br>|http 是超文本传输协议，信息是明文传输，https 则是具有安全性的 ssl 加密传输协议。|<br>|使用不同的链接方式，端口也不同，一般而言，http 协议的端口为 80，https 的端口为 443。|<br>|http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。|<br>   CA (Certificate Authority)，也叫“证书授权中心”。证书即 “digital certificate” 或 “public key certificate”。CA 是负责管理和签发证书的第三方机构，它必须具有足够的权威性；它可以是一个公认的权威的企业，也可以是企业自身。企业内部系统一般都使用企业自身的认证系统。CA 认证流程包括以下主要步骤。</p>
<ol>
<li>HTTPS 通信双方的服务器端向 CA 机构申请证书，CA 机构下发根证书、服务端证书及私钥给申请者；</li>
<li>HTTPS 通信双方的客户端向 CA 机构申请证书，CA机构下发根证书、客户端证书及私钥给申请者；</li>
<li>客户端向服务器端发起请求，服务端下发服务端证书给客户端。客户端接收到证书后，通过私钥解密证书，并利用服务器端证书中的公钥认证证书信息比较证书里的消息，例如域名和公钥与服务器刚刚发送的相关消息是否一致，如果一致，则客户端认为这个服务器的合法身份；</li>
<li>客户端发送客户端证书给服务器端，服务端接收到证书后，通过私钥解密证书，获得客户端的证书公钥，并用该公钥认证证书信息，确认客户端是否合法；</li>
<li>客户端通过随机秘钥加密信息，并发送加密后的信息给服务端。服务器端和客户端协商好加密方案后，客户端会产生一个随机的秘钥，客户端通过协商好的加密方案，加密该随机秘钥，并发送该随机秘钥到服务器端。服务器端接收这个秘钥后，双方通信的所有内容都都通过该随机秘钥加密；</li>
</ol>
<h2 id="3-https-协议的工作原理"><a href="#3-https-协议的工作原理" class="headerlink" title="3. https 协议的工作原理"></a>3. https 协议的工作原理</h2><p>客户端在使用 HTTPS 方式与 Web 服务器通信时有以下几个步骤。<br>|过程|<br>|:—-|<br>|客户使用 https url 访问服务器，则要求 web 服务器建立 ssl 链接。|<br>|web 服务器接收到客户端的请求之后，会将网站的证书（证书中包含了公钥），返回给客户端。|<br>|客户端和 web 服务器端开始协商 SSL 链接的安全等级，也就是加密等级。|<br>|客户端浏览器通过双方协商一致的安全等级，建立会话密钥，然后通过网站的公钥来加密会话密钥，并传送给网站。|<br>|web 服务器通过自己的私钥解密出会话密钥。|<br>|web 服务器通过会话密钥加密与客户端之间的通信。|</p>
<h2 id="4-https-协议的优点"><a href="#4-https-协议的优点" class="headerlink" title="4. https 协议的优点"></a>4. https 协议的优点</h2><p>   使用 HTTPS 协议可认证用户和服务器，确保数据发送到正确的客户机和服务器；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，要比 http 协议安全，可防止数据在传输过程中不被窃取、改变，确保数据的完整性。HTTPS 是现行架构下最安全的解决方案，虽然不是绝对安全，但它大幅增加了中间人攻击的成本。谷歌曾在 2014 年 8 月份调整搜索引擎算法，并称“比起同等 HTTP 网站，采用 HTTPS 加密的网站在搜索结果中的排名将会更高”。</p>
<h2 id="5-https-协议的缺点"><a href="#5-https-协议的缺点" class="headerlink" title="5. https 协议的缺点"></a>5. https 协议的缺点</h2><p>   https 握手阶段比较费时，会使页面加载时间延长 50%，增加 10%~20% 的耗电。https 缓存不如 http 高效，会增加数据开销。SSL 证书也需要钱，功能越强大的证书费用越高。SSL 证书需要绑定 IP，不能再同一个 IP 上绑定多个域名，IPv4 资源支持不了这种消耗。</p>
<h2 id="6-参考资料"><a href="#6-参考资料" class="headerlink" title="6. 参考资料"></a>6. 参考资料</h2><ol>
<li><a href="https://www.nowcoder.com/tutorial/96/4700c6f1f3334c9191a38406002efa65" target="_blank" rel="noopener">牛客网面经</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener">阮一峰–SSL/TLS协议运行机制</a></li>
</ol>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>html标签</title>
    <url>/2020/01/31/html%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<h1 id="HTML的基本标签"><a href="#HTML的基本标签" class="headerlink" title="HTML的基本标签"></a>HTML的基本标签</h1><hr>
<p>本文根据 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element" target="_blank" rel="noopener">html元素参考</a> 整理得来，作为笔记使用。</p>
<ol>
<li><p>根元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> 、<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">html</td>
<td align="center">HTML文档的根。</td>
</tr>
<tr>
<td align="center">body</td>
<td align="center">分区根元素，表示文档的内容。</td>
</tr>
</tbody></table>
</li>
<li><p>文档元数据<br>元数据含有页面的相关信息，包括样式、脚本及数据，能帮助一些软件（例如 <a href="https://developer.mozilla.org/en-US/docs/Glossary/search_engine" target="_blank" rel="noopener">搜索引擎</a>、<a href="https://developer.mozilla.org/en-US/docs/Glossary/Browser" target="_blank" rel="noopener">浏览器</a> 等等）更好地运用和渲染页面。对于样式和脚本的元数据，可以直接在网页里定义，也可以链接到包含相关信息的外部文件。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>、<span class="tag">&lt;<span class="name">title</span>&gt;</span>、<span class="tag">&lt;<span class="name">base</span>&gt;</span>、<span class="tag">&lt;<span class="name">link</span>&gt;</span>、<span class="tag">&lt;<span class="name">meta</span>&gt;</span>、<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">head</td>
<td align="center">关于文档元数据的一个集合，包括脚本或样式表的链接或内容。</td>
</tr>
<tr>
<td align="center">title</td>
<td align="center">定义文档的标题，将显示在浏览器的标题栏或标签页上。该元素只能包含文本，包含的标签不会被解释。</td>
</tr>
<tr>
<td align="center">base</td>
<td align="center">定义页面上相对 URL 的基准 URL。</td>
</tr>
<tr>
<td align="center">link</td>
<td align="center">用于链接外部的 CSS 到该文档。</td>
</tr>
<tr>
<td align="center">meta</td>
<td align="center">定义其他 HTML 元素无法描述的元数据。</td>
</tr>
<tr>
<td align="center">style</td>
<td align="center">用于内联 CSS。</td>
</tr>
</tbody></table>
</li>
<li><p>内容分区<br>内容分区元素可以将内容从逻辑上进行组织划分，来为页面内容创建明确的大纲，以便区分各个章节的内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>、<span class="tag">&lt;<span class="name">nav</span>&gt;</span>、<span class="tag">&lt;<span class="name">section</span>&gt;</span>、<span class="tag">&lt;<span class="name">aside</span>&gt;</span> 、<span class="tag">&lt;<span class="name">footer</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>~<span class="tag">&lt;<span class="name">h6</span>&gt;</span> 、<span class="tag">&lt;<span class="name">article</span>&gt;</span> 、<span class="tag">&lt;<span class="name">address</span>&gt;</span>、<span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">header</td>
<td align="center">表示一组引导性的帮助。</td>
</tr>
<tr>
<td align="center">nav</td>
<td align="center">导航。</td>
</tr>
<tr>
<td align="center">section</td>
<td align="center">表示文档中的一个区域（或节），通过是否含一个标题作为子节点来辨识。</td>
</tr>
<tr>
<td align="center">aside</td>
<td align="center">表示与其余页面无关的内容部分。</td>
</tr>
<tr>
<td align="center">footer</td>
<td align="center">表示最近一个章节内容或者根节点元素的页脚。</td>
</tr>
<tr>
<td align="center">h</td>
<td align="center">标题。</td>
</tr>
<tr>
<td align="center">article</td>
<td align="center">表示文档、页面、应用或网站中的独立结构。</td>
</tr>
<tr>
<td align="center">address</td>
<td align="center">地址信息。</td>
</tr>
</tbody></table>
</li>
<li><p>文本内容<br>使用 HTML 文本内容元素来组织在开标签 <code>&lt;body&gt;</code> 和闭标签 <code>&lt;/body&gt;</code> 里的块或章节的内容。这些元素能标识内容的宗旨或结构，而这对于 accessibility 和 SEO 很重要。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span>、<span class="tag">&lt;<span class="name">div</span>&gt;</span>、<span class="tag">&lt;<span class="name">p</span>&gt;</span>、<span class="tag">&lt;<span class="name">pre</span>&gt;</span>、<span class="tag">&lt;<span class="name">ol</span>&gt;</span>、</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>、<span class="tag">&lt;<span class="name">li</span>&gt;</span>、<span class="tag">&lt;<span class="name">dl</span>&gt;</span> 、<span class="tag">&lt;<span class="name">dt</span>&gt;</span>、<span class="tag">&lt;<span class="name">dd</span>&gt;</span>、<span class="tag">&lt;<span class="name">figure</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>、<span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> 、<span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">main</td>
<td align="center">文档<code>&lt;body&gt;</code>或应用的主体部分。</td>
</tr>
<tr>
<td align="center">div</td>
<td align="center">文档分区元素， 通用型流内容容器。</td>
</tr>
<tr>
<td align="center">p</td>
<td align="center">段落。</td>
</tr>
<tr>
<td align="center">pre</td>
<td align="center">预定义格式文本。</td>
</tr>
<tr>
<td align="center">ol</td>
<td align="center">有序列表。</td>
</tr>
<tr>
<td align="center">ul</td>
<td align="center">无序列表。</td>
</tr>
<tr>
<td align="center">li</td>
<td align="center">列表条目元素。</td>
</tr>
<tr>
<td align="center">dl</td>
<td align="center">描述列表元素。</td>
</tr>
<tr>
<td align="center">dt</td>
<td align="center">术语定义元素。</td>
</tr>
<tr>
<td align="center">dd</td>
<td align="center">描述元素，描述列表<code>&lt;dl&gt;</code>的子元素，<code>&lt;dd&gt;</code>与 <code>&lt;dt&gt;</code> 一起用。</td>
</tr>
<tr>
<td align="center">figure</td>
<td align="center">代表一段独立的内容, 经常与说明(caption) <code>&lt;figcaption&gt;</code> 配合使用。</td>
</tr>
<tr>
<td align="center">figcaption</td>
<td align="center">图片说明/标题，于描述其父节点 <code>&lt;figure&gt;</code> 元素里的其他数据。</td>
</tr>
<tr>
<td align="center">blockquote</td>
<td align="center">HTML 块级引用元素。</td>
</tr>
<tr>
<td align="center">hr</td>
<td align="center">表示段落级元素之间的主题转换，视觉上看是水平线。</td>
</tr>
</tbody></table>
</li>
<li><p>内联文本语义<br>使用 HTML 内联文本语义（Inline text semantics）定义一个单词、一行内容，或任意文字的语义、结构或样式。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>、<span class="tag">&lt;<span class="name">a</span>&gt;</span>、<span class="tag">&lt;<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">em</span>&gt;</span>、<span class="tag">&lt;<span class="name">q</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span>、<span class="tag">&lt;<span class="name">mark</span>&gt;</span>、<span class="tag">&lt;<span class="name">code</span>&gt;</span>、<span class="tag">&lt;<span class="name">abbr</span>&gt;</span>、<span class="tag">&lt;<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bdi</span>&gt;</span>、<span class="tag">&lt;<span class="name">bdo</span>&gt;</span>、<span class="tag">&lt;<span class="name">sub</span>&gt;</span>、<span class="tag">&lt;<span class="name">sup</span>&gt;</span>、<span class="tag">&lt;<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>、<span class="tag">&lt;<span class="name">u</span>&gt;</span>、<span class="tag">&lt;<span class="name">cite</span>&gt;</span>、<span class="tag">&lt;<span class="name">data</span>&gt;</span>、<span class="tag">&lt;<span class="name">kbd</span>&gt;</span>、<span class="tag">&lt;<span class="name">nobr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>、<span class="tag">&lt;<span class="name">samp</span>&gt;</span>、<span class="tag">&lt;<span class="name">tt</span>&gt;</span>、<span class="tag">&lt;<span class="name">var</span>&gt;</span>、<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>、<span class="tag">&lt;<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rt</span>&gt;</span>、<span class="tag">&lt;<span class="name">rtc</span>&gt;</span>、<span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">kbd</td>
<td align="center">表示用户输入。</td>
</tr>
<tr>
<td align="center">span</td>
<td align="center">通用行内容器。</td>
</tr>
<tr>
<td align="center">a</td>
<td align="center">超链接。</td>
</tr>
<tr>
<td align="center">strong</td>
<td align="center">粗体显示。</td>
</tr>
<tr>
<td align="center">em</td>
<td align="center">标记出需要用户着重阅读的内容，可通过嵌套加深着重程度。</td>
</tr>
<tr>
<td align="center">q</td>
<td align="center">短的引用文本。</td>
</tr>
<tr>
<td align="center">br</td>
<td align="center">换行。</td>
</tr>
<tr>
<td align="center">mark</td>
<td align="center">代表突出显示的文字，可以用来显示搜索引擎搜索后关键词。</td>
</tr>
<tr>
<td align="center">code</td>
<td align="center">呈现一段计算机代码。</td>
</tr>
<tr>
<td align="center">abbr</td>
<td align="center">缩写，并可选择提供一个完整的描述。</td>
</tr>
<tr>
<td align="center">b</td>
<td align="center">提醒注意，样式和粗体类似（不要用于显示粗体，用css font-weight来创建粗体）。</td>
</tr>
<tr>
<td align="center">bdi</td>
<td align="center">双向隔离元素。</td>
</tr>
<tr>
<td align="center">bdo</td>
<td align="center">双向覆盖元素。</td>
</tr>
<tr>
<td align="center">sub</td>
<td align="center">排低文本。</td>
</tr>
<tr>
<td align="center">sup</td>
<td align="center">排高文本。</td>
</tr>
<tr>
<td align="center">time</td>
<td align="center">时间。</td>
</tr>
<tr>
<td align="center">i</td>
<td align="center">区分普通文本的一系列文本，内容通常以斜体显示。</td>
</tr>
<tr>
<td align="center">u</td>
<td align="center">使文本在其内容的基线下的一行呈现下划线。</td>
</tr>
<tr>
<td align="center">cite</td>
<td align="center">表示一个作品的引用。</td>
</tr>
<tr>
<td align="center">data</td>
<td align="center">将一个指定内容和机器可读的翻译联系在一起。</td>
</tr>
<tr>
<td align="center">dfn</td>
<td align="center">表示术语的一个定义。</td>
</tr>
<tr>
<td align="center">kbd</td>
<td align="center">表示用户输入。</td>
</tr>
<tr>
<td align="center">nobr</td>
<td align="center">阻止文本自动拆分成新行，不应该使用，应该使用css属性。</td>
</tr>
<tr>
<td align="center">s</td>
<td align="center">删除线，提倡使用 <code>&lt;del&gt;</code> 和 <code>&lt;ins&gt;</code> 元素。</td>
</tr>
<tr>
<td align="center">samp</td>
<td align="center">标识计算机程序输出。</td>
</tr>
<tr>
<td align="center">tt</td>
<td align="center">电报文本元素。</td>
</tr>
<tr>
<td align="center">var</td>
<td align="center">表示变量的名称，或者由用户提供的值。</td>
</tr>
<tr>
<td align="center">wbr</td>
<td align="center">一个文本中的位置，其中浏览器可以选择来换行。</td>
</tr>
<tr>
<td align="center">rp</td>
<td align="center">用于为那些不能使用<code>&lt;ruby&gt;</code>元素展示 ruby 注解的浏览器，提供随后的圆括号。</td>
</tr>
<tr>
<td align="center">rt</td>
<td align="center">用于描述东亚字符的发音。</td>
</tr>
<tr>
<td align="center">rtc</td>
<td align="center">包含文字的语义注解。</td>
</tr>
<tr>
<td align="center">ruby</td>
<td align="center">被用来展示东亚文字注音或字符注释。</td>
</tr>
</tbody></table>
</li>
<li><p>图片和多媒体<br>HTML 支持各种多媒体资源，例如图像、音频和视频。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span>、<span class="tag">&lt;<span class="name">audio</span>&gt;</span>、<span class="tag">&lt;<span class="name">video</span>&gt;</span>、<span class="tag">&lt;<span class="name">track</span>&gt;</span>、<span class="tag">&lt;<span class="name">map</span>&gt;</span>、<span class="tag">&lt;<span class="name">area</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">img</td>
<td align="center">图片。</td>
</tr>
<tr>
<td align="center">audio</td>
<td align="center">音频内容。</td>
</tr>
<tr>
<td align="center">video</td>
<td align="center">视频内容。</td>
</tr>
<tr>
<td align="center">track</td>
<td align="center">被当作媒体元素 <code>&lt;audio&gt;</code> 和 <code>&lt;video&gt;</code> 的子元素来使用。</td>
</tr>
<tr>
<td align="center">map</td>
<td align="center">与 <code>&lt;area&gt;</code> 属性一起使用来定义一个图像映射(一个可点击的链接区域)。</td>
</tr>
<tr>
<td align="center">area</td>
<td align="center">在图片上定义一个热点区域，可以关联一个超链接。<code>&lt;area&gt;</code>元素仅在<code>&lt;map&gt;</code>元素内部使用。</td>
</tr>
</tbody></table>
</li>
<li><p>内嵌内容<br>除了常规的多媒体内容，HTML 可以包括各种其他的内容，即使它并不容易交互。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span>&gt;</span>、<span class="tag">&lt;<span class="name">embed</span>&gt;</span>、<span class="tag">&lt;<span class="name">object</span>&gt;</span> 、<span class="tag">&lt;<span class="name">param</span>&gt;</span>、<span class="tag">&lt;<span class="name">picture</span>&gt;</span>、<span class="tag">&lt;<span class="name">source</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">iframe</td>
<td align="center">表示嵌套的浏览上下文，有效地将另一个HTML页面嵌入到当前页面中。</td>
</tr>
<tr>
<td align="center">embel</td>
<td align="center">将外部内容嵌入文档中的指定位置。</td>
</tr>
<tr>
<td align="center">object</td>
<td align="center">表示引入一个外部资源。</td>
</tr>
<tr>
<td align="center">param</td>
<td align="center">定义了<code>&lt;object&gt;</code>的参数。</td>
</tr>
<tr>
<td align="center">picture</td>
<td align="center">容器，用来为其内部特定的 <code>&lt;img&gt;</code> 元素提供多样的 <code>&lt;source&gt;</code> 元素。</td>
</tr>
<tr>
<td align="center">source</td>
<td align="center">资源。</td>
</tr>
</tbody></table>
</li>
<li><p>脚本<br>为了创建动态内容和 Web 应用程序，HTML 支持使用脚本语言，最突出的就是 JavaScript。某些元素用于支持此功能。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span>&gt;</span>、<span class="tag">&lt;<span class="name">noscript</span>&gt;</span>、<span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">canvas</td>
<td align="center">通过脚本（通常是JavaScript）绘制图形。</td>
</tr>
<tr>
<td align="center">noscript</td>
<td align="center">替代未执行脚本。</td>
</tr>
<tr>
<td align="center">script</td>
<td align="center">用于嵌入或引用可执行脚本。</td>
</tr>
</tbody></table>
</li>
<li><p>编辑标识</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>、<span class="tag">&lt;<span class="name">ins</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">del</td>
<td align="center">表示一些被从文档中删除的文字内容。</td>
</tr>
<tr>
<td align="center">ins</td>
<td align="center">定义已经被插入文档中的文本。</td>
</tr>
</tbody></table>
</li>
<li><p>表格内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>、<span class="tag">&lt;<span class="name">caption</span>&gt;</span>、<span class="tag">&lt;<span class="name">thead</span>&gt;</span>、<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span>、<span class="tag">&lt;<span class="name">tr</span>&gt;</span>、<span class="tag">&lt;<span class="name">col</span>&gt;</span><span class="tag">&lt;<span class="name">colgroup</span>&gt;</span>、<span class="tag">&lt;<span class="name">th</span>&gt;</span>、<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">table</td>
<td align="center">表格。</td>
</tr>
<tr>
<td align="center">caption</td>
<td align="center">表格的标题，通常作为 <code>&lt;table&gt;</code> 的第一个子元素出现。</td>
</tr>
<tr>
<td align="center">thead</td>
<td align="center">表格页眉。</td>
</tr>
<tr>
<td align="center">tbody</td>
<td align="center">表格主体。</td>
</tr>
<tr>
<td align="center">tfoot</td>
<td align="center">表格页脚。</td>
</tr>
<tr>
<td align="center">tr</td>
<td align="center">行。</td>
</tr>
<tr>
<td align="center">col</td>
<td align="center">列， 通常位于<code>&lt;colgroup&gt;</code>元素内。</td>
</tr>
<tr>
<td align="center">colgroup</td>
<td align="center">表格列组。</td>
</tr>
<tr>
<td align="center">th</td>
<td align="center">表头。</td>
</tr>
<tr>
<td align="center">td</td>
<td align="center">表格单元。</td>
</tr>
</tbody></table>
</li>
<li><p>表单</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span> 、<span class="tag">&lt;<span class="name">input</span>&gt;</span>、<span class="tag">&lt;<span class="name">textarea</span>&gt;</span> 、<span class="tag">&lt;<span class="name">label</span>&gt;</span>、<span class="tag">&lt;<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span>&gt;</span>、<span class="tag">&lt;<span class="name">fieldset</span>&gt;</span>、<span class="tag">&lt;<span class="name">legend</span>&gt;</span>、<span class="tag">&lt;<span class="name">meter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optgroup</span>&gt;</span>、<span class="tag">&lt;<span class="name">option</span>&gt;</span>、<span class="tag">&lt;<span class="name">output</span>&gt;</span>、<span class="tag">&lt;<span class="name">progress</span>&gt;</span>、<span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">form</td>
<td align="center">表单。</td>
</tr>
<tr>
<td align="center">input</td>
<td align="center">输入域。</td>
</tr>
<tr>
<td align="center">textarea</td>
<td align="center">多行文本域。</td>
</tr>
<tr>
<td align="center">label</td>
<td align="center">标题。</td>
</tr>
<tr>
<td align="center">button</td>
<td align="center">按钮。</td>
</tr>
<tr>
<td align="center">datalist</td>
<td align="center">包含了一组<code>&lt;option&gt;</code>元素,这些元素表示其它表单控件可选值。</td>
</tr>
<tr>
<td align="center">fieldset</td>
<td align="center">一组相关的表单元素，并使用外框包含起。</td>
</tr>
<tr>
<td align="center">legend</td>
<td align="center">表示它的父元素<code>&lt;fieldset&gt;</code>的内容的标题。</td>
</tr>
<tr>
<td align="center">meter</td>
<td align="center">显示已知范围的标量值或者分数值。</td>
</tr>
<tr>
<td align="center">optgroup</td>
<td align="center">一个 <code>&lt;select&gt;</code>元素中的一组选项。</td>
</tr>
<tr>
<td align="center">option</td>
<td align="center">用于定义在<code>&lt;select&gt;</code>,  <code>&lt;optgroup&gt;</code>或<code>&lt;datalist&gt;</code>元素中包含的项。</td>
</tr>
<tr>
<td align="center">output</td>
<td align="center">表示计算或用户操作的结果。</td>
</tr>
<tr>
<td align="center">progress</td>
<td align="center">进度条。</td>
</tr>
<tr>
<td align="center">select</td>
<td align="center">选项菜单。</td>
</tr>
</tbody></table>
</li>
<li><p>交互元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span>、<span class="tag">&lt;<span class="name">summary</span>&gt;</span>、<span class="tag">&lt;<span class="name">dialog</span>&gt;</span>、<span class="tag">&lt;<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">details</td>
<td align="center">创建一个挂件，仅在被切换成展开状态时，它才会显示内含的信息。</td>
</tr>
<tr>
<td align="center">summary</td>
<td align="center">用作一个<code>&lt;details&gt;</code>元素的一个内容的摘要，标题或图例。</td>
</tr>
<tr>
<td align="center">dialog</td>
<td align="center">对话框。</td>
</tr>
<tr>
<td align="center">menu</td>
<td align="center">菜单。</td>
</tr>
</tbody></table>
</li>
<li><p>Web 组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span>、<span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">元素</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">slot</td>
<td align="center">web 组件技术的一部分，<code>&lt;slot&gt;</code>是 web 组件的一个占位符。</td>
</tr>
<tr>
<td align="center">template</td>
<td align="center">用于保存客户端内容的机制。</td>
</tr>
</tbody></table>
</li>
<li><p>过时的和弃用的元素</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">acronym</span>&gt;</span>、<span class="tag">&lt;<span class="name">applet</span>&gt;</span>、<span class="tag">&lt;<span class="name">basefont</span>&gt;</span>、<span class="tag">&lt;<span class="name">bgsound</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">big</span>&gt;</span>、<span class="tag">&lt;<span class="name">blink</span>&gt;</span>、<span class="tag">&lt;<span class="name">center</span>&gt;</span>、<span class="tag">&lt;<span class="name">command</span>&gt;</span>、<span class="tag">&lt;<span class="name">content</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dir</span>&gt;</span>、<span class="tag">&lt;<span class="name">element</span>&gt;</span>、<span class="tag">&lt;<span class="name">font</span>&gt;</span>、<span class="tag">&lt;<span class="name">frame</span>&gt;</span>、<span class="tag">&lt;<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span>&gt;</span>、<span class="tag">&lt;<span class="name">isindex</span>&gt;</span>、<span class="tag">&lt;<span class="name">keygen</span>&gt;</span>、<span class="tag">&lt;<span class="name">listing</span>&gt;</span>、<span class="tag">&lt;<span class="name">marquee</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menuitem</span>&gt;</span>、<span class="tag">&lt;<span class="name">multicol</span>&gt;</span>、<span class="tag">&lt;<span class="name">nextid</span>&gt;</span>、<span class="tag">&lt;<span class="name">nobr</span>&gt;</span>、<span class="tag">&lt;<span class="name">noembed</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noframes</span>&gt;</span>、<span class="tag">&lt;<span class="name">plaintext</span>&gt;</span>、<span class="tag">&lt;<span class="name">spacer</span>&gt;</span>、<span class="tag">&lt;<span class="name">strike</span>&gt;</span>、<span class="tag">&lt;<span class="name">shadow</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tt</span>&gt;</span>、<span class="tag">&lt;<span class="name">xmp</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>html概述</title>
    <url>/2020/01/30/html%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a>html基础</h1><hr>
<h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>   超文本标记语言（HyperText Markup Language，HTML）是一种用于创建网页的标准标记语言。所谓标记语言就是指一套标记标签 (markup tag)，HTML 文档使用标记标签来描述网页，一个文档包含了HTML 标签及文本内容。<br>   HTML 文档一般通过Web浏览器（如Chrome，Internet Explorer，Firefox，Safari等）进行解析并显示为网页。文件后缀名为<code>.html</code>或者<code>.htm</code>，这两种都是静态网页文件的扩展名，扩展名可以互相更换而在打开时不会引起错误。出于一致性和明确性考虑,建议使用<code>.html</code>作为后缀名。<br>   HTML 标签是由尖括号包围的关键词，比如 <code>&lt;html&gt;</code>。HTML 标签通常是成对出现的，比如<code>&lt;b&gt;</code> 和<code>&lt;/b&gt;</code>。标签对中的第一个标签是开始标签，第二个标签是结束标签。</p>
<h2 id="2-实例"><a href="#2-实例" class="headerlink" title="2.实例"></a>2.实例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-实例说明"><a href="#3-实例说明" class="headerlink" title="3.实例说明"></a>3.实例说明</h2><p>   <code>&lt;!DOCTYPE html&gt;</code> 声明文档为 HTML5 文档。<br>   <code>&lt;html&gt;</code> 元素是 HTML 页面的根元素。<br>   <code>&lt;head&gt;</code> 元素包含了文档的元（meta）数据，如 <code>&lt;meta charset=&quot;utf-8&quot;&gt;</code> 定义网页编码格式为 <code>utf-8</code>。<br>   <code>&lt;body&gt;</code> 元素包含了可见的页面内容。</p>
<h2 id="4-版本"><a href="#4-版本" class="headerlink" title="4.版本"></a>4.版本</h2><h3 id="4-1-版本发布时间"><a href="#4-1-版本发布时间" class="headerlink" title="4-1.版本发布时间"></a>4-1.版本发布时间</h3><table>
<thead>
<tr>
<th align="center">版本</th>
<th align="center">发布时间</th>
</tr>
</thead>
<tbody><tr>
<td align="center">HTML</td>
<td align="center">1991</td>
</tr>
<tr>
<td align="center">HTML+</td>
<td align="center">1993</td>
</tr>
<tr>
<td align="center">HTML 2.0</td>
<td align="center">1995</td>
</tr>
<tr>
<td align="center">HTML 3.2</td>
<td align="center">1997</td>
</tr>
<tr>
<td align="center">HTML 4.01</td>
<td align="center">1999</td>
</tr>
<tr>
<td align="center">XHTML 1.0</td>
<td align="center">2000</td>
</tr>
<tr>
<td align="center">HTML5</td>
<td align="center">2012</td>
</tr>
<tr>
<td align="center">XHTML5</td>
<td align="center">2013</td>
</tr>
</tbody></table>
<h3 id="4-2-版本声明"><a href="#4-2-版本声明" class="headerlink" title="4-2.版本声明"></a>4-2.版本声明</h3><p>   HTML5</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>   HTML 4.01</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>XHTML 1.0</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="5-参考链接"><a href="#5-参考链接" class="headerlink" title="5.参考链接"></a>5.参考链接</h2><p>   <a href="https://www.runoob.com/html/html-tutorial.html" target="_blank" rel="noopener">菜鸟教程–HTML 教程</a></p>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>项目环境搭建与初始化</title>
    <url>/2020/01/30/%E9%A1%B9%E7%9B%AE%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    <content><![CDATA[<h1 id="项目环境搭建与初始化"><a href="#项目环境搭建与初始化" class="headerlink" title="项目环境搭建与初始化"></a>项目环境搭建与初始化</h1><hr>
<h2 id="1-工具安装和环境搭建（nodejs-npm-mongodb）"><a href="#1-工具安装和环境搭建（nodejs-npm-mongodb）" class="headerlink" title="1. 工具安装和环境搭建（nodejs,npm,mongodb）"></a>1. 工具安装和环境搭建（nodejs,npm,mongodb）</h2><ol>
<li>node 安装：<a href="www.nodejs.org">nodejs官网</a><br><code>$ sudo apt install node</code></li>
<li>安装完成之后会有 node 命令和 npm 命令<br><code>$ npm -v</code> 查看是否安装完成</li>
<li>npm 安装 cnpm 并设置淘宝源：<br><code>$ npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>
<li>vue安装<br>全局安装 vue-cli 脚手架工具： <code>$ sudo cnpm install -g @vue/cli</code></li>
<li>mongodb 数据库的安装<br><code>$ sudo apt install mongodb</code></li>
</ol>
<h2 id="2-初始化项目（vue-cli）"><a href="#2-初始化项目（vue-cli）" class="headerlink" title="2. 初始化项目（vue-cli）"></a>2. 初始化项目（vue-cli）</h2><ol>
<li>sever 文件夹：放置服务端项目，包括给后台管理界面提供的接口和给 web 端提供的端口<ol>
<li>初始化一个 node 项目：<code>$ cnpm init -y</code></li>
<li>建立入口文件： <code>$ touch index.js</code></li>
<li>在<code>index.js</code>内自定义脚本执行 nodemo：<code>&quot;server&quot; : &quot;nodemon index.js&quot;</code></li>
<li>全局安装 nodemon：<code>$ cnpm i -g nodemon</code></li>
</ol>
</li>
<li>web 文件夹：前端界面<ol>
<li>建立 vue 初始文件：<code>$ vue create web</code></li>
<li>初始化完成后按照命令执行：<code>$ cd web</code>以及<code>$ npm run serve</code></li>
<li>进入浏览器查看 127.0.0.1:port 确认是否搭建成功</li>
</ol>
</li>
<li>admin 文件夹：管理员界面<ol>
<li>建立 vue 初始文件：<code>$ vue create admin</code></li>
<li>初始化完成后按照命令执行：<code>$ cd admin</code>以及<code>$ npm run serve</code></li>
<li>进入浏览器查看 127.0.0.1:port 确认是否搭建成功</li>
</ol>
</li>
</ol>]]></content>
      <categories>
        <category>node-vue-mongodb全栈开发</category>
      </categories>
  </entry>
  <entry>
    <title>浏览器相关知识</title>
    <url>/2020/01/30/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h1 id="浏览器相关知识"><a href="#浏览器相关知识" class="headerlink" title="浏览器相关知识"></a>浏览器相关知识</h1><hr>
<h2 id="浏览器内核"><a href="#浏览器内核" class="headerlink" title="浏览器内核"></a>浏览器内核</h2><p>   主流浏览器内核，主流浏览器是有一定市场份额且有自己独立研发内核的浏览器：</p>
<ol>
<li>Trident内核：代表浏览器 IE（Edge是微软随win10推出，使用的是EdgeHTML内核）</li>
<li>Gecko内核：代表浏览器 Firefox</li>
<li>Presto内核(已废弃)：Opera12.17及更早版本曾经采用的内核，现已停止开发并废弃。Opera现已改用Google Chrome的Blink内核。</li>
<li>Webkit内核：代表浏览器 Safari、Chrome。</li>
<li>Blink内核：由Google和Opera Software基于Webkit引擎研发的排版引擎，内置于Chrome浏览器之中。代表浏览器 Opera、Chrome。<br>总结为如下的表格：<table>
<thead>
<tr>
<th align="center">主流浏览器</th>
<th align="center">内核</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IE -&gt; Edge</td>
<td align="center">trident-&gt;EdgeHTML</td>
</tr>
<tr>
<td align="center">Chrome</td>
<td align="center">webkit-&gt;blink</td>
</tr>
<tr>
<td align="center">Safari</td>
<td align="center">webkit</td>
</tr>
<tr>
<td align="center">Firefox</td>
<td align="center">Gecko</td>
</tr>
<tr>
<td align="center">Opera</td>
<td align="center">Presto-&gt;blink</td>
</tr>
</tbody></table>
</li>
</ol>
<h2 id="js引擎"><a href="#js引擎" class="headerlink" title="js引擎"></a>js引擎</h2><p>   主流浏览器的 js 引擎</p>
<ol>
<li>Chakra，是在IE9上使用的js引擎。</li>
<li>SpriderMonkey，TraceMonkey，JaegerMonkey这些运用在Mozilla FireFox上。</li>
<li>v8，应用于Chrome，遨游上。</li>
<li>Nitro，应用于Safari上。<br>总结如下表:<table>
<thead>
<tr>
<th align="center">主流浏览器</th>
<th align="center">js引擎</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IE -&gt; Edge</td>
<td align="center">JScript（IE3.0-IE8.0） /IE9+ Chakra</td>
</tr>
<tr>
<td align="center">Chrome</td>
<td align="center">V8</td>
</tr>
<tr>
<td align="center">Safari</td>
<td align="center">Nitro（4-）</td>
</tr>
<tr>
<td align="center">Firefox</td>
<td align="center">SpiderMonkey（1.0-3.0）/ TraceMonkey（3.5-3.6）/ JaegerMonkey（4.0-）</td>
</tr>
<tr>
<td align="center">Opera</td>
<td align="center">Linear A（4.0-6.1）/ Linear B（7.0-9.2）/ Futhark（9.5-10.2）/ Carakan（10.5-）</td>
</tr>
</tbody></table>
</li>
</ol>]]></content>
      <categories>
        <category>html</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/18/hello-world/</url>
    <content><![CDATA[<p>此心安处是吾乡</p>]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
  </entry>
</search>
